@inherits LayoutComponentBase
@using System
@using System.Threading.Tasks
@using db_testiä.Authentication
@using db_testiä.Models
@using Microsoft.AspNetCore.Components.Authorization
@inject NavigationManager Nav
@inject CustomAuthStateProvider AuthStateProvider

<div class="layout">
    <header class="layout__header">
        <a class="layout__brand" href="/">Mongo Users</a>

        <nav class="layout__nav">
            <NavLink class="layout__link" href="/" Match="NavLinkMatch.All">Home</NavLink>
            <AuthorizeView>
                <Authorized>
                    <NavLink class="layout__link" href="/users">Users</NavLink>
                </Authorized>
            </AuthorizeView>
        </nav>

        <div class="layout__actions">
            <AuthorizeView>
                <Authorized Context="authContext">
                    <span class="layout__welcome">Hi, @authContext.User.Identity?.Name</span>
                    <button type="button" class="layout__logout" @onclick="Logout">Log out</button>
                </Authorized>
                <NotAuthorized>
                    <button type="button" class="layout__login" @onclick="OpenLogin">Log in</button>
                </NotAuthorized>
            </AuthorizeView>
        </div>
    </header>

    <main class="layout__main">
        <CascadingValue Value="(Action)OpenLogin">
            @Body
        </CascadingValue>
    </main>
</div>

<LoginModal @bind-IsOpen="showLoginModal" OnSuccess="HandleLoginSuccess" />

@code {
    private bool showLoginModal;

    private void OpenLogin()
    {
        if (showLoginModal)
        {
            return;
        }

        showLoginModal = true;
        _ = InvokeAsync(StateHasChanged);
    }

    private async Task Logout()
    {
        await AuthStateProvider.UpdateAuthenticationState(null);
        showLoginModal = false;
        Nav.NavigateTo("/");
    }

    private async Task HandleLoginSuccess(LoginResponse response)
    {
        showLoginModal = false;
        // Navigate to the dashboard after a successful login.
        Nav.NavigateTo("/users", forceLoad: false);
        await InvokeAsync(StateHasChanged);
    }
}

<style>
    .layout {
        min-height: 100vh;
        display: flex;
        flex-direction: column;
        background: linear-gradient(180deg, #f8fbff 0%, #eef2fb 100%);
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    .layout__header {
        display: flex;
        align-items: center;
        justify-content: space-between;
        gap: 2rem;
        padding: 1.25rem 2.75rem;
        background: rgba(255, 255, 255, 0.88);
        box-shadow: 0 8px 26px rgba(24, 40, 72, 0.12);
        backdrop-filter: blur(14px);
        position: sticky;
        top: 0;
        z-index: 20;
    }

    .layout__brand {
        font-size: 1.35rem;
        font-weight: 700;
        color: #1f2a44;
        text-decoration: none;
        letter-spacing: 0.02em;
    }

    .layout__nav {
        display: flex;
        align-items: center;
        gap: 1rem;
    }

    .layout__link {
        position: relative;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        padding: 0.45rem 0.9rem;
        border-radius: 999px;
        text-decoration: none;
        color: #405078;
        font-weight: 600;
        transition: color 0.15s ease, background-color 0.15s ease, transform 0.15s ease;
    }

    .layout__link:hover {
        color: #182848;
        background: rgba(24, 40, 72, 0.08);
        transform: translateY(-1px);
    }

    .layout__link.active {
        color: #182848;
        background: rgba(24, 40, 72, 0.15);
    }

    .layout__actions {
        display: flex;
        align-items: center;
        gap: 0.75rem;
        margin-left: auto;
    }

    .layout__welcome {
        color: #4c5d7a;
        font-weight: 600;
        cursor: pointer;
        transition: transform 0.15s ease, box-shadow 0.15s ease, opacity 0.15s ease;
    }

    .layout__login {
        color: #fff;
        background: linear-gradient(135deg, #4b6cb7, #182848);
        box-shadow: 0 10px 24px rgba(24, 40, 72, 0.28);
    }

    .layout__login:hover {
        transform: translateY(-1px);
        box-shadow: 0 12px 30px rgba(24, 40, 72, 0.32);
    }

    .layout__logout {
        color: #182848;
        background: rgba(24, 40, 72, 0.08);
    }

    .layout__login,
    .layout__logout {
        border: none;
        border-radius: 999px;
        padding: 0.5rem 1.25rem;
        font-size: 0.95rem;
        font-weight: 600;
        cursor: pointer;
        transition: transform 0.15s ease, box-shadow 0.15s ease, opacity 0.15s ease;
    }

    .layout__login {
        color: #fff;
        background: linear-gradient(135deg, #4b6cb7, #182848);
        box-shadow: 0 10px 24px rgba(24, 40, 72, 0.28);
    }

    .layout__login:hover {
        transform: translateY(-1px);
        box-shadow: 0 12px 30px rgba(24, 40, 72, 0.32);
    }

    .layout__logout {
        color: #182848;
        background: rgba(24, 40, 72, 0.08);
    }

    .layout__logout:hover {
        transform: translateY(-1px);
        background: rgba(24, 40, 72, 0.14);
    }

    .layout__main {
        flex: 1;
        padding: 3rem 2.5rem 4rem;
        display: flex;
        justify-content: center;
        align-items: stretch;
    }

    .layout__main > * {
        width: 100%;
    }

    @@media (max-width: 960px) {
        .layout__header {
            flex-wrap: wrap;
            gap: 1rem;
            padding: 1rem 1.5rem;
        }

        .layout__nav {
            order: 3;
            width: 100%;
            justify-content: center;
            gap: 0.75rem;
        }

        .layout__actions {
            margin-left: 0;
        }

        .layout__main {
            padding: 2.5rem 1.25rem 3rem;
        }
    }
</style>
